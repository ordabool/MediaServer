server {
    listen 80;
    server_name jellybeb.com www.jellybeb.com docs.jellybeb.com tc.jellybeb.com discover.jellybeb.com cockpit.jellybeb.com jellybeb.com;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }    
}

server {
    listen 443 ssl;

    client_max_body_size 5G;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    # auth_basic           "Private Server";
    # auth_basic_user_file /etc/nginx/conf.d/.htpasswd;

    ssl_certificate /etc/letsencrypt/live/jellybeb.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/jellybeb.com/privkey.pem;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        return 301 https://app.plex.tv/desktop;
    }
    
    # location /movies/ {
    #     proxy_pass http://radarr:7878/movies/;
    # }

    # location /tv/ {
    #     proxy_pass http://sonarr:8989/tv/;
    # }

    # location /subs/ {
    #     proxy_pass http://bazarr:6767/subs/;
    # }

    # location /sources/ {
    #     proxy_pass http://prowlarr:9696/sources/;
    # }

    # location /downloads/ {
    #     proxy_pass         http://qbittorrent:8080/;
    #     proxy_http_version 1.1;

    #     proxy_set_header   Host               127.0.0.1:8080;
    #     proxy_set_header   X-Forwarded-Host   $http_host;
    #     proxy_set_header   X-Forwarded-For    $remote_addr;

    #     # not used by qBittorrent
    #     #proxy_set_header   X-Forwarded-Proto  $scheme;
    #     #proxy_set_header   X-Real-IP          $remote_addr;

    #     # optionally, you can adjust the POST request size limit, to allow adding a lot of torrents at once
    #     #client_max_body_size 100M;

    #     # Since v4.2.2, is possible to configure qBittorrent
    #     # to set the "Secure" flag for the session cookie automatically.
    #     # However, that option does nothing unless using qBittorrent's built-in HTTPS functionality.
    #     # For this use case, where qBittorrent itself is using plain HTTP
    #     # (and regardless of whether or not the external website uses HTTPS),
    #     # the flag must be set here, in the proxy configuration itself.
    #     # Note: If this flag is set while the external website uses only HTTP, this will cause
    #     # the login mechanism to not work without any apparent errors in console/network resulting in "auth loops".
    #     # proxy_cookie_path  /                  "/; Secure";
    # }

    # location /private_downloads/ {
    #     proxy_pass         http://private_qbittorrent:3003/;
    #     proxy_http_version 1.1;

    #     proxy_set_header   Host               127.0.0.1:3003;
    #     proxy_set_header   X-Forwarded-Host   $http_host;
    #     proxy_set_header   X-Forwarded-For    $remote_addr;
    # }

    # location /filebrowser {
    #     # auth_basic off;

    #     # prevents 502 bad gateway error
    #     proxy_buffers 8 32k;
    #     proxy_buffer_size 64k;

    #     # redirect all HTTP traffic to localhost:8088;
    #     proxy_pass http://filebrowser:8080;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header Host $http_host;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     #proxy_set_header X-NginX-Proxy true;

    #     # enables WS support
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";

    #     proxy_read_timeout 999999999;
    # }
}

#  server {
#     listen 443 ssl;
#     server_name tc.jellybeb.com;

#     auth_basic           "Private Server";
#     auth_basic_user_file /etc/nginx/conf.d/.htpasswd;

#     ssl_certificate /etc/letsencrypt/live/jellybeb.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/jellybeb.com/privkey.pem;

#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
#     location / {
#         proxy_pass http://tdarr:8265/;
#     }
# }

# server {
#     listen 443 ssl;
#     server_name cockpit.jellybeb.com;

#     auth_basic           "Private Server";
#     auth_basic_user_file /etc/nginx/conf.d/.htpasswd;

#     ssl_certificate /etc/letsencrypt/live/jellybeb.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/jellybeb.com/privkey.pem;

#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
#     location / {
#         # Required to proxy the connection to Cockpit
#         proxy_pass https://192.168.0.20:9090;
#         proxy_set_header Host $host;
#         proxy_set_header X-Forwarded-Proto $scheme;

#         # Required for web sockets to function
#         proxy_http_version 1.1;
#         proxy_buffering off;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";

#         # Pass ETag header from Cockpit to clients.
#         # See: https://github.com/cockpit-project/cockpit/issues/5239
#         gzip off;
#     }
# }

 server {
    listen 443 ssl;
    server_name docs.jellybeb.com;

    ssl_certificate /etc/letsencrypt/live/jellybeb.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/jellybeb.com/privkey.pem;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    location / {
        proxy_pass http://sphinx:8000/;
    }
}

server {
    listen 443 ssl;
    server_name discover.jellybeb.com;

    ssl_certificate /etc/letsencrypt/live/jellybeb.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/jellybeb.com/privkey.pem;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        proxy_pass http://overseerr:5055/;
    }
}

server {
    listen 443 ssl;
    server_name books.jellybeb.com;

    ssl_certificate /etc/letsencrypt/live/jellybeb.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/jellybeb.com/privkey.pem;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        proxy_pass http://audiobookshelf:80/;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;

        client_max_body_size 5G;

        # Required for web sockets to function
        proxy_http_version 1.1;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

# server {
#     listen 443 ssl;
#     server_name calibre.jellybeb.com;

#     auth_basic           "Private Server";
#     auth_basic_user_file /etc/nginx/conf.d/.htpasswd;

#     ssl_certificate /etc/letsencrypt/live/jellybeb.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/jellybeb.com/privkey.pem;

#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

#     location / {
#         proxy_pass http://calibre:8080/;
#         proxy_set_header Host $host;
#         proxy_set_header X-Forwarded-Proto $scheme;

#         client_max_body_size 5G;

#         # Required for web sockets to function
#         proxy_http_version 1.1;
#         proxy_buffering off;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#     }
# }