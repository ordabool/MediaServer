version: "2"

services:
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - VERSION=docker
      - PLEX_CLAIM=${PLEX_CLAIM}
      - NVIDIA_VISIBLE_DEVICES=all
    volumes:
      - ${PLEX_CONFIG_PATH}:/config
      - ${DATA_PATH}:/data
    restart: always
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
    volumes:
      - ${SONARR_CONFIG_PATH}:/config
      - ${DATA_PATH}:/data
    ports:
      - 8989:8989
    restart: always

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
    volumes:
      - ${RADARR_CONFIG_PATH}:/config
      - ${DATA_PATH}:/data
    ports:
      - 7878:7878
    restart: always

  bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
    volumes:
      - ${BAZARR_CONFIG_PATH}:/config
      - ${DATA_PATH}:/data
    ports:
      - 6767:6767
    restart: always

  prowlarr:
    image: linuxserver/prowlarr:develop
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
    volumes:
      - ${PROWLARR_CONFIG_PATH}:/config
    ports:
      - 9696:9696
    restart: always

  qbittorrent:
    image: linuxserver/qbittorrent
    container_name: qbittorrent
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=002
      - WEBUI_PORT=8080
    volumes:
      - ${QBITTORRENT_CONFIG_PATH}:/config
      - ${DATA_PATH}:/data
    ports:
      - 6881:6881
      - 6881:6881/udp
      - 8080:8080
    restart: always
    # default username/password is admin/adminadmin

  tdarr:
    image: haveagitgat/tdarr_aio
    container_name: tdarr
    ports:
    -  8265:8265
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - NVIDIA_VISIBLE_DEVICES=all
    volumes:
    - ${TDARR_CONFIG_PATH}/config:/home/Tdarr/Documents/Tdarr
    - ${TDARR_CONFIG_PATH}/db:/var/lib/mongodb
    - ${TDARR_TRANSCODE_PATH}:/home/Tdarr/cache
    - ${TDARR_OUTPUT_PATH}:/home/Tdarr/output
    - /etc/localtime:/etc/localtime:ro
    - ${DATA_PATH}:/data
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  server:
    image: nginx
    restart: always
    container_name: mediaserver
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    container_name: certbot
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  sphinx:
    container_name: sphinx
    build: ./sphinx
    volumes:
      - ./sphinx:/sphinx
      - ./build:/build
    command: sphinx-autobuild -a --host 0.0.0.0 --port 8000 /sphinx/source /build
    ports:
      - 7000:8000

  filebrowser:
    # Default username & pass are 'admin'
    image: hurlenko/filebrowser
    container_name: filebrowser
    ports:
      - 7654:8080
    volumes:
      - ${DATA_PATH}:/data
      - ${FILEBROWSER_CONFIG_PATH}:/config
    environment:
      - FB_BASEURL=/filebrowser
    restart: always

  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${OVERSEERR_CONFIG_PATH}:/config
    ports:
      - 5055:5055
    restart: always
